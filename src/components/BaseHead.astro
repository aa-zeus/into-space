---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';

export interface Props {
  title: string;
  description: string;
  image?: string;
}

const { title, description, image = '/placeholder-social.jpg' } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<script is:inline>
  window.theme = (function initTheme(key) {
    let useSystemPreference = true;
    const mql = window.matchMedia('(prefers-color-scheme: dark)');

    let _theme;

    if ((_theme = window.localStorage.getItem(key)) !== null) {
      if (['dark', 'light'].includes(_theme)) {
        useSystemPreference = false;
      } else {
        window.localStorage.removeItem(key);
      }
    }

    if (useSystemPreference) {
      _theme = mql.matches ? 'dark' : 'light';
    }

    update(_theme);

    mql.addEventListener('change', (ev) => {
      if (useSystemPreference) {
        _theme = ev.matches ? 'dark' : 'light';
        update(_theme);
      }
    });

    function update(theme) {
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    }

    return {
      get current() {
        return _theme;
      },
      set current(theme) {
        _theme = theme;
        update(_theme);
        window.localStorage.setItem(key, _theme);
      },
    };
  })((window.THEME_KEY = window.THEME_KEY || 'theme'));
</script>
